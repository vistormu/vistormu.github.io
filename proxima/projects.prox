@doc.head{}

@doc.nav{}

@page.landing{
<title> projects
}{
<subtitle> programming and more programming
}{
<description> a collection of projects I have worked on
}{
<links> projects
side projects
}

@sec.h2{projects}

<p>
Here is a collection of the programming projects I am working on and maintain right now.
</p>

@card{
<title> goraspio
}{
<subtitle> \#go \#raspberry-pi \#communications
}{
<description> goraspio is a library written in Go that contains all common operations for using a raspberry pi as a controller
}{
<date> v0.0.6
}{
<link> https://github.com/vistormu/goraspio
}{
<button_text> VISIT
}

@card{
<title> cahier
}{
<subtitle> \#rust \#ssh \#cli
}{
<description> cahier is a small tool to manage ssh connections in a simple way. it supports sending shh keys, bringing and sending files, and connecting to your servers with a single command.
}{
<date> v0.1.2
}{
<link> https://github.com/vistormu/cahier
}{
<button_text> VISIT
}

@card{
<title> proxima
}{
<subtitle> \#go \#markup-language \#python
}{
<description> proxima is a markup language that transpiles to any text-based format you want. you can extend proxima with python components, a nice way of adding logic and reusability to your documents.
}{
<date> v0.5.0
}{
<link> https://github.com/vistormu/proxima
}{
<button_text> VISIT
}

@card{
<title> catasta
}{
<subtitle> \#python \#pytorch \#machine-learning
}{
<description> catasta is a python library written in pytorch designed to simplify the process of machine learning model experimentation. optimization, training, evaluation and inference all in one place!
}{
<date> v0.3.0
}{
<link> https://github.com/vistormu/catasta
}{
<button_text> VISIT
}

@card{
<title> vistormu.dev
}{
<subtitle> \#proxima \#html \#css \#go
}{
<description> this is my personal website, where my projects, blog posts, research work, and other stuff are hosted. it is built using proxima, my markup language, and go for the backend.
}{
<date>
}{
<link> https://vistormu.dev
}{
<button_text> VISIT
}

@card{
<title> vclog
}{
<subtitle> \#python \#logging
}{
<description> vclog is a single-scripted console logger that offers a minimal and colorful experience with no dependencies.
}{
<date> v.1.1.1
}{
<link> https://github.com/vistormu/vclog
}{
<button_text> VISIT
}

@sec.h2{side projects}

<p>
here are some side projects I have worked on, mostly to learn new technologies or to have fun.
</p>

@card{
<title> snake in the cli
}{
<subtitle> \#go \#cli
}{
<description> this is my attempt to create a simple snake game using only the terminal and go. it was a fun project to learn more about the terminal and its capabilities. you can check out the tutorial i wrote @url{/tutorials/snake-cli}{here}
}{
<date>
}{
<link> https://github.com/vistormu/snake-cli
}{
<button_text> VISIT
}

@card{
<title> jamba
}{
<subtitle> \#go \#text-editor
}{
<description> jamba is a terminal-based text editor written in go. it is based on the @url{http://antirez.com/news/108}{antirez's Kilo Text Editor} and inspired on vim. the original version is written in C, and this is my attempt to port it to a more idiomatic Go code. I highly recommend you to try and build your own text editor with @url{https://viewsourcecode.org/snaptoken/kilo/index.html}{this wonderful tutorial!}
}{
<date>
}{
<link> https://github.com/vistormu/jamba
}{
<button_text> VISIT
}

@card{
<title> kimchi
}{
<subtitle> \#go \#interpreter \#programming-language
}{
<description> kimchi is a general-purpose programming language based on the @url{https://monkeylang.org/}{Monkey programming language}, and written in Go. it was my attempt to create the dream programming language I wanted to use by that time. it has been one the projects that taught me the most about programming, so I really recommend you to check out the book @url{https://interpreterbook.com}{Writing an Interpreter in Go} by Thorsten Ball and try to build your own programming language!
}{
<date>
}{
<link> https://github.com/vistormu/kimchilang
}{
<button_text> VISIT
}

@card{
<title> decision maker
}{
<subtitle> \#go \#board-game \#cli
}{
<description> Have you ever felt like you don't want to decide between a series of options? Decision Maker helps your indecision by running a board game! It is a simple game in the style of mario party that I wrote to fairly decide who would get the biggest room in our apartment.
}{
<date>
}{
<link> https://github.com/vistormu/decision_maker
}{
<button_text> VISIT
}

@card{
<title> advent of code
}{
<subtitle> \#go-2022 \#python-2022 \#gleam-2020
}{
<description> Advent of Code is an Advent calendar of small programming puzzles for a variety of skill sets and skill levels that can be solved in any programming language you like.
}{
<date>
}{
<link> https://github.com/vistormu/advent_of_code
}{
<button_text> VISIT
}

@doc.foot{}
